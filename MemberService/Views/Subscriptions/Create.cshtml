@model MemberService.Data.BLL.MyServices
@{
    ViewBag.Title = "Create";
    bool isInstallationActive = (bool)ViewBag.isInstallationActive;
    bool IsMemberService = (bool)ViewBag.IsMemberService;
}
<div class="container">
    <div class="panel panel-default">
        <div class="panel-heading">Request Subscription</div>
        <div class="panel-body">

            @using (Html.BeginForm("Create", "Subscriptions", FormMethod.Post, new { @class = "form-horizontal" }))
            {
                @Html.AntiForgeryToken()
                @Html.ValidationMessage("Exception")
                @Html.HiddenFor(model => model.Id)
                @Html.HiddenFor(model => model.StripeCustomerId)
                if (IsMemberService && !isInstallationActive)
                {
                    <div class="alert alert-warning" role="alert">
                        <strong>Info !</strong>Installation Service is not active yet. to activate 'Installation' service, please make payment and try later.
                    </div>
                }
                <div class="form-group">
                    @Html.LabelFor(model => model.ServiceId, new { @class = "col-sm-2 control-label" })
                    <div class="col-sm-10">
                        @Html.DropDownListFor(model => model.ServiceId, ViewBag.ServiceList as SelectList, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.ServiceId)
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.StartDate, new { @class = "col-sm-2 control-label" })
                    <div class="col-sm-10">
                        <div class="input-group">
                            @Html.TextBoxFor(model => model.StartDate, new { @class = "form-control" })
                        </div>
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.ValidDate, new { @class = "col-sm-2 control-label" })
                    <div class="col-sm-10">
                        <div class="input-group">
                            @Html.TextBoxFor(model => model.ValidDate, new { @class = "form-control" })
                        </div>
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <a href="@Url.Action("Index")" id="Cancel" class="btn btn-sm btn-default"><i class="glyphicon glyphicon-chevron-left"></i> Cancel</a>
                        @if ((IsMemberService && isInstallationActive) || !IsMemberService)
                        {
                            <button type="submit" id="Save" class="btn btn-sm btn-primary"><i class="glyphicon glyphicon-save"></i>@( IsMemberService?"Send Subscription":"Save")</button>
                        }

                    </div>
                </div>
            }
        </div>
    </div>
</div>

@section scripts{
    <script>

    </script>
}
